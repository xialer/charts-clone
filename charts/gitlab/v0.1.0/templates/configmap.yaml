apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "gitlab.fullname" . }}
  labels:
    app: {{ template "gitlab.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  {{- if .Values.config.baseUrl }}
  base_url: {{ .Values.config.baseUrl | quote }}
  {{- else }}
  {{- if .Values.ingress.enabled }}
  {{- $host := (index .Values.ingress.hosts.gitlab 0) }}
  {{- $protocol := "http" }}
  {{- if .Values.ingress.tls }}
  {{- $protocol := (printf "%ss" $protocol) }}
  {{- end }}
  base_url: {{ $protocol }}://{{ $host.name }}{{ $host.path }}
  {{- else }}
  base_url: http://{{ template "gitlab.fullname" . }}-gitlab
  {{- end }}
  {{- end }}
  {{- $postgres := .Values.config.postgres }}
  {{- if $postgres.internal }}
  postgres_host: {{ template "gitlab.fullname" . }}-postgres
  {{- else }}
  postgres_host: {{ $postgres.host | quote }}
  {{- end }}
  postgres_database: {{ $postgres.database | quote }}
  postgres_port: {{ $postgres.port | quote }}
  postgres_username: {{ $postgres.username | quote }}
  {{- $redis := .Values.config.redis }}
  {{- if $redis.internal }}
  redis_host: {{ template "gitlab.fullname" . }}-redis
  {{- else }}
  redis_host: {{ $redis.host | quote }}
  {{- end }}
  redis_port: {{ $redis.port | quote }}
  redis_username: {{ $redis.username | quote }}
  omnibus_config: |-
    nginx['listen_https'] = false;
    prometheus_monitoring['enable'] = false;
    external_url = ENV['EXTERNAL_URL'];
    root_pass = ENV['GITLAB_ROOT_PASSWORD'];
    postgresql['enable'] = false;
    gitlab_rails['db_host'] = ENV['DB_HOST'];
    gitlab_rails['db_password'] = ENV['DB_PASSWORD'];
    gitlab_rails['db_username'] = ENV['DB_USER'];
    gitlab_rails['db_database'] = ENV['DB_DATABASE'];
    redis['enable'] = false;
    gitlab_rails['redis_host'] = ENV['REDIS_HOST'];
    # gitlab_rails['redis_password'] = ENV['REDIS_PASSWORD'];
    unicorn['worker_processes'] = 2;
    manage_accounts['enable'] = true;
    manage_storage_directories['manage_etc'] = false;
    gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';
    git_data_dirs = ['/gitlab-data/git-data'];
    gitlab_rails['shared_path'] = '/gitlab-data/shared';
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads';
    gitlab_ci['builds_directory'] = '/gitlab-data/builds';
    gitlab_rails['omniauth_enabled'] = {{ .Values.config.keycloak.enabled }}
    gitlab_rails['auto_sign_in_with_provider'] = true
    gitlab_rails['omniauth_allow_single_sign_on'] = ['saml']
    gitlab_rails['omniauth_block_auto_created_users'] = false
    gitlab_rails['auto_link_ldap_user'] = false
    gitlab_rails['auto_link_saml_user'] = true
    gitlab_rails['external_providers'] = []
    gitlab_rails['omniauth_providers'] = [
      {
         name: 'saml',
         label: '{{ .Values.config.keycloak.company }}',
         groups_attribute: 'roles',
         external_groups: ['{{ .Values.config.keycloak.clientId }}:external'],
         args: {
           assertion_consumer_service_url: '{{ template "gitlab.base_url" . }}/users/auth/saml/callback',
           # idp_cert_fingerprint: '{{ .Values.config.keycloak.fingerprint }}',
           idp_cert_fingerprint_algorithm: 'http://www.w3.org/2000/09/xmldsig#sha1',
           idp_cert: '-----BEGIN CERTIFICATE-----{{ .Values.config.keycloak.certificate }}-----END CERTIFICATE-----',
           idp_sso_target_url: '{{ .Values.config.keycloak.baseUrl }}/auth/realms/{{ .Values.config.keycloak.realmName }}/protocol/saml/clients/{{ .Values.config.keycloak.clientId }}',
           issuer: '{{ .Values.config.keycloak.clientId }}',
           name_identifier_format: 'urn:oasis:names:tc:SAML:2.0:nameid-format:persistent',
           attribute_statements: {
             first_name: ['first_name'],
             last_name: ['last_name'],
             name: ['name'],
             username: ['name'],
             email: ['email']
           }
         }
      }
    ]
    