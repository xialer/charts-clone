apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ template "sonarqube.fullname" . }}-sonarqube
  labels:
    app: {{ template "sonarqube.name" . }}-sonarqube
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "sonarqube.name" . }}-sonarqube
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: {{ template "sonarqube.fullname" . }}-sonarqube-init
          image: busybox
          command: ["sh", "-c", "chown -R 999:999 /opt/sonarqube"]
          volumeMounts:
            - name: data
              mountPath: /opt/sonarqube/conf
              subPath: conf
            - name: data
              mountPath: /opt/sonarqube/extensions
              subPath: extensions
      containers:
        - name: {{ template "sonarqube.fullname" . }}-sonarqube
          image: {{ .Values.images.sonarqube.repository }}:{{ .Values.images.sonarqube.tag }}
          imagePullPolicy: {{ .Values.images.sonarqube.pullPolicy }}
          ports:
            - name: container
              containerPort: 9000
          volumeMounts:
            - name: data
              mountPath: /opt/sonarqube/conf
              subPath: conf
            - name: data
              mountPath: /opt/sonarqube/extensions
              subPath: extensions
          env:
            - name: sonar.core.serverBaseURL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sonarqube.fullname" . }}
                  key: base_url
            - name: sonar.jdbc.username
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sonarqube.fullname" . }}
                  key: postgres_username
            - name: sonar.jdbc.url
              valueFrom:
                configMapKeyRef:
                  name: {{ template "sonarqube.fullname" . }}
                  key: postgres_jdbc_url
            - name: sonar.jdbc.password
              valueFrom:
                secretKeyRef:
                  name: {{ template "sonarqube.fullname" . }}
                  key: postgres_password
          livenessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.liveness | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: container
{{ toYaml .Values.probes.readiness | indent 12 }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "sonarqube.fullname" . ) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
